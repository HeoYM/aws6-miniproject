apiVersion: v1
kind: Service
metadata:
  name: mongo-svc
spec:
  selector:
    app: mongo
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017
  type: ClusterIP
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo-db
spec:
  selector:
    matchLabels:
      app: mongo
  serviceName: mongo-svc
  replicas: 1
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - name: mongo
        image: mongo:latest
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongo-secrets
              key: root-username
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongo-secrets
              key: root-password
        - name: MONGO_INITDB_DATABASE
          valueFrom:
            secretKeyRef:
              name: mongo-secrets
              key: MONGO_INITDB_DATABASE
        - name: MONGO_INITDB_USER
          valueFrom:
            secretKeyRef:
              name: mongo-secrets
              key: user-username
        - name: MONGO_INITDB_USER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongo-secrets
              key: user-password
        ports:
        - containerPort: 27017
        volumeMounts:
        - name: mongo-data
          mountPath: /data/db
        - name: mongo-config
          mountPath: /docker-entrypoint-initdb.d
      volumes:
      - name: mongo-data
        persistentVolumeClaim:
          claimName: mongo-pvc
      - name: mongo-config
        configMap:
          name: mongo-configmap
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongo-pv
spec:
  accessModes:
    - ReadWriteOnce
  capacity:
    storage: 10Gi
  hostPath:
    path: /mnt/data/mongo
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
